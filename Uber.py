# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ODAifGXcWxrLrZN7yq4gqy_En2eZGk4i
"""

import pandas as pd

df=pd.read_csv("Uber Request Data.csv")

df.head()

len(df["Request id"].unique())

df.shape

df.isnull().sum()

df.isnull().sum()/df.shape[0]*100

df.info()

df["Request timestamp"].value_counts()

df["Request timestamp"]=df["Request timestamp"].astype(str)

df["Request timestamp"]=df["Request timestamp"].replace("/","-")

df["Request timestamp"]=pd.to_datetime(df["Request timestamp"],dayfirst=True)

df.info()

df["Drop timestamp"]=pd.to_datetime(df["Drop timestamp"],dayfirst=True)

df.info()

df["Drop timestamp"]

req_hour=df["Request timestamp"].dt.hour

len(req_hour)

df["req_hour"]=req_hour

req_day=df["Request timestamp"].dt.day

df["req_day"]=req_day

import  seaborn as sns

import matplotlib.pyplot as plt

sns.countplot(x="req_hour",data=df,hue="Status")
plt.show()

sns.factorplot(x="req_hour",data=df,row="req_day",hue="Status",kind="count")
plt.show()

sns.factorplot(x="req_hour",data=df,row="req_day",hue="Pickup point",kind="count")
plt.show()

sns.factorplot(x="req_hour",data=df,hue="Pickup point",kind="count")
plt.show()



df

df["Time_Slot"]=0

df

j=0
for i in df["req_hour"]:
    if df.iloc[j,6]<5:
        df.iloc[j,8]="Pre_Morning"
    elif 5<=df.iloc[j,6]<10:
        df.iloc[j,8]="Morning_Rush"
        
    elif 10<=df.iloc[j,6]<17:
        df.iloc[j,8]="Day_Time"
        
    elif 17<=df.iloc[j,6]<22:
        df.iloc[j,8]="Evening_Rush"
    else:
        df.iloc[j,8]="Late_Night"
    j=j+1

<5           "Pre_morning"
5<=x<10   == "Morning Rush"
10<=x<17     'Day_time'
17<=x<22     "Evening rush"
else         "Late night"

df

df["Time_Slot"].value_counts()

plt.figure(figsize=(10,6))
sns.countplot(x="Time_Slot",hue="Status",data=df)
plt.show()

df_morning_rush=df[df['Time_Slot']=='Morning_Rush']

sns.countplot(x="Pickup point",hue="Status",data=df_morning_rush)

"""# Severity of problem by location and their count (cancellation of cab as per the pickup location at morning rush hours)"""

df_airport_cancelled=df_morning_rush.loc[(df_morning_rush["Pickup point"]=="Airport") & (df_morning_rush["Status"]=="Cancelled")]

df_airport_cancelled.shape[0]

df_city_cancelled=df_morning_rush.loc[(df_morning_rush["Pickup point"]=="City") & (df_morning_rush["Status"]=="Cancelled")]

df_city_cancelled.shape[0]

"""# Supply and demand"""

df_morning_rush

df_morning_rush.loc[(df_morning_rush["Pickup point"]=="City")].shape[0]

df_morning_rush.loc[(df_morning_rush["Pickup point"]=="City") & (df_morning_rush["Status"]=="Trip Completed")].shape[0]

df_morning_rush.loc[(df_morning_rush["Pickup point"]=="Airport")].shape[0]

df_morning_rush.loc[(df_morning_rush["Pickup point"]=="Airport") & (df_morning_rush["Status"]=="Trip Completed")].shape[0]

"""# Supply and Demand for evening rush"""

df_evening_rush=df[df['Time_Slot']=='Evening_Rush']

df_city_cancelled=df_evening_rush.loc[(df_evening_rush["Pickup point"]=="City") & (df_evening_rush["Status"]=="Cancelled")]

sns.countplot(x="Pickup point",hue="Status",data=df_evening_rush)

df_city_cancelled.shape[0]

df_evening_rush["Status"].value_counts()

df_evening_rush.loc[(df_evening_rush["Pickup point"]=="City")].shape[0]

df_evening_rush.loc[(df_evening_rush["Pickup point"]=="City") & (df_evening_rush["Status"]=="Trip Completed")].shape[0]

df_evening_rush.loc[(df_evening_rush["Pickup point"]=="Airport")].shape[0]

df_evening_rush.loc[(df_evening_rush["Pickup point"]=="Airport") & (df_evening_rush["Status"]=="Trip Completed")].shape[0]

"""# Severity problem at each location by looking at cancellation of cabs in each of the pickup location"""

df_evening_rush.loc[(df_evening_rush["Pickup point"]=="Airport") & (df_evening_rush["Status"]=="Cancelled")].shape[0]

df_evening_rush.loc[(df_evening_rush["Pickup point"]=="City") & (df_evening_rush["Status"]=="Cancelled")].shape[0]

"""# Severity of problem by location in morning rush"""

